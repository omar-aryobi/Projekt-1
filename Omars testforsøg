#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Oct 28 13:32:44 2021

@author: omar
"""

import numpy as np
import matplotlib.pyplot as plt
import os

def dataLoad(filename):
    data = np.empty((0,3))
    #print(data)
    with open(filename, mode = 'r') as f:
        fl = f.readlines()
    for i in fl:
        data = np.append(data, np.array([i.split()],dtype=float), axis = 0)
        #print(data)
        
    l = []
# =============================================================================
#     for k in range(len(data)):
#         if 10 < data[k][0] < 60 and data[k][1] > 0 and int(data[k][2]) in [1,2,3,4]:
#             pass
#         else:
#             l.append(k)
#             #Error message
#             if not 10 < data[k][0] < 60:
#                     error = 'temperature higher or equal to 60 or lower or equal to 10'
#                     print(f"Error in line {k} because {error}.")
#             if not data[k][1] > 0:
#                     error = 'growth rate is negative'
#                     print(f"Error in line {k} because {error}.")
#             if not int(data[k][2]) in [1,2,3,4]:
#                     error = 'bacteria number is not on the list'
#                     print(f"Error in line {k} because {error}.")
#             
# =============================================================================
            
    for k in range(len(data)):
        if not 10 < data[k][0] < 60:
            error = 'temperature higher or equal to 60 or lower or equal to 10'
            print(f"Error in line {k} because {error}.")
            l.append(k)
        if not data[k][1] > 0:
            error = 'growth rate is negative'
            print(f"Error in line {k} because {error}.")
            l.append(k)
        if not int(data[k][2]) in [1,2,3,4]:
            error = 'bacteria number is not on the list'
            print(f"Error in line {k} because {error}.")
            l.append(k)


            
    data = np.delete(data, l, 0)
            
    #np array med true hele vejen også sætte den lig false hver gang en af dem ikke er opfyldt. 
    #Kun 3 if-statements

    return data

#ER vores data i et array?

print(dataLoad('test.txt'))
data1 = dataLoad('test.txt')


def dataStatistics(data, statistic):
    
    if statistic == "Mean Temperature":
        result = np.mean(data,axis=0)[0]
        
    elif statistic == "Mean Growth rate":
        result = np.mean(data,axis=0)[1]
        
    elif statistic == "Std Temperature":
        result = np.std(data, axis=0)[0]
        
    elif statistic == "Std Growth rate":
        result = np.std(data, axis=0)[1]
    
    elif statistic == "Rows":
        result = data.shape[0]
        
    elif statistic == "Mean Cold Growth rate":
        #En linje (man kan også lave for-loop)
        new_data = data[data[:,0]<20,:]
        result = np.mean(new_data,axis=0)[1]

    elif statistic == "Mean Hot Growth rate":
        new_data = data[data[:,0]>50,:]
        result = np.mean(new_data,axis=0)[1]
    
    return result
    
print(dataStatistics(data1, "Mean Temperature"))
    
print(dataStatistics(data1, "Mean Growth rate"))
    
print(dataStatistics(data1, "Std Temperature")) 

print(dataStatistics(data1, "Std Growth rate")) 

print(dataStatistics(data1, "Rows")) 

print(dataStatistics(data1, "Mean Cold Growth rate")) 

print(dataStatistics(data1, "Mean Hot Growth rate")) 

a = np.array([[1,2,3],[4,5,6]])
print(dataStatistics(a, "Std Temperature")) 
    
    
def dataPlot(data):
    #Opdeler data kan bruges i begge plot (laver for-loop)
    data1 = data[data[:,2] == 1,:]
    data2 = data[data[:,2] == 2,:]
    data3 = data[data[:,2] == 3,:]
    data4 = data[data[:,2] == 4,:]
    
    sorted_order = np.argsort(data1[:,0])
    data1 = data1[sorted_order]
    
    sorted_order = np.argsort(data2[:,0])
    data2 = data2[sorted_order]
    
    sorted_order = np.argsort(data3[:,0])
    data3 = data3[sorted_order]
    
    sorted_order = np.argsort(data4[:,0])
    data4 = data4[sorted_order]

    
    #Plot 1: Number of bacteria
    count_1=data1.shape[0]
    count_2=data2.shape[0]
    count_3=data3.shape[0]
    count_4=data4.shape[0]
    #count_1 = np.count_nonzero(data[:,2] == 1)
    #count_2 = np.count_nonzero(data[:,2] == 2)
    #ount_3 = np.count_nonzero(data[:,2] == 3)
    #count_4 = np.count_nonzero(data[:,2] == 4)
    
    labels = ['Salmonella enterica', 'Bacillus cereus', 'Listeria', 'Brochothrix thermosphacta']
    #tror jeg ikke behøves x = np.arange(len(labels)) måske forskellige farver
    y = [count_1,count_2,count_3,count_4]
    fig = plt.figure()
    ax = fig.add_axes([0,0,1,1])

    ax.bar(labels,y, color = ["orchid","indigo","pink", "lightcoral"])
    
    plt.title("Number of bacteria")
    #idk med dem her plt.xlabel("Type of bacteria") 
    #plt.ylabel("Number") 
    plt.show()
    
    #Plot 2: Growth rate by temperature
    #plt.plot([data1[:,0], data2[:,0], data3[:,0], data4[:,0]],[data1[:,1], data2[:,1], data3[:,1], data4[:,1]], color = [".-b", ".-r", ".-y", ".-black"])
    plt.plot(data1[:,0],data1[:,1],color='orchid', linestyle='solid', marker='.', label = "Salmonella enterica")
    plt.plot(data2[:,0],data2[:,1],color='indigo', linestyle='solid', marker='.', label = "Bacillus cereus")
    plt.plot(data3[:,0],data3[:,1],color='pink', linestyle='solid', marker='.', label = "Listeria")
    plt.plot(data4[:,0],data4[:,1],color='lightcoral', linestyle='solid', marker='.', label = "Brochothrix thermosphacta'")
    
    plt.xlim([10, 60]) 
    plt.ylim([0, 1])
    
    plt.xlabel("Temperature")
    plt.ylabel("Growth Rate")
    
    plt.title("Growth rate by temperature")
    
    #Måske gøre legends mindre
    plt.legend(prop={'size': 7})
    plt.show()

print(dataPlot(data1))

def inputNumber(prompt):
    while True:
        try:
            num = float(input(prompt))
            break
        except ValueError:
            print("Please enter a number")
            pass
    return num

def displayMenu(options):
    # DISPLAYMENU Displays a menu of options, ask the user to choose an item
    # and returns the number of the menu item chosen.
    ##
    #Usage: choice = displayMenu(options)
    ##
    #Input options Menu options (array of strings)
    # Output choice Chosen option (integer)
    ##
    #Author: Mikkel N. Schmidt, mnsc@dtu.dk, 2015
    # Display menu options
    for i in range(len(options)):
        print("{:d}. {:s}".format(i+1, options[i]))
    
    # Get a valid menu choice
    choice = 0

    while not(np.any(choice == np.arange(len(options))+1)):
        #Fejlmeddelelse (if-statements)
        
        choice = inputNumber("Please choose a menu item by entering the number of the option: ")
        
    return choice


#Hoved-scriptet
#rækkefølgen skal være underordnet
#print(inputNumber('Vælg et nummer'))

while True:
    choice = displayMenu(["Load data", "Filter data", "Display statistics", "Generate plots","Quit"])
    
    
    if choice == 1:
        file_name = input("Please enter file name to load data: ")
        file_exists = os.path.exists(file_name)
        while not file_exists:
            file_name = input("File not found. Return to menu (enter R) or enter a valid file name: ")
    # =============================================================================
    #         if file_name == "R":
    #             break
    # =============================================================================
            file_exists = os.path.exists(file_name)
        data = dataLoad(file_name)
        print("Data loaded and the lines with errors are deleted.\n")
        
    if choice == 2:
        #Skal måske fejl om at 1 skal vælges først eller også skal data loades.
        print("\nFilter data based on the following categories:")
        filter_data = displayMenu(["Type of bacteria", "Range of Growth rate", "Range of Temperature", "Return to menu"])
        
        if filter_data == 1:
            print("\nFilter data based on the following types of bacteria:")
            bacteria = displayMenu(["Salmonella enterica", "Bacillus cereus", "Listeria", "Brochothrix thermosphacta", "Return to menu"])
            if bacteria == 5:
                pass
            else:
                data = data[data[:,2] == bacteria,:]
                print("\nThe filtered data is shown below:")
                print(data, "\n")
                #indexere på baggrund af bacteria da det er et tal
                
        if filter_data == 2:
            #Bedre engelsk
            min_growth = inputNumber("Please enter the minimum value of the Growth rate range: ")
            max_growth = inputNumber("Please enter the maximum value of the Growth rate range: ")
            
            #data = data[((min_growth <= data[:,1]) and (data[:,1] <= max_growth)),:]
            data1 = data[min_growth <= data[:,1],:]
            data = data1[data1[:,1] <= max_growth,:]
            print("\nThe filtered data is shown below:")
            print(data, "\n")
            
        if filter_data == 3:
            min_temp = inputNumber("Please enter the minimum value of the Temperature range: ")
            max_temp = inputNumber("Please enter the maximum value of the Temperature range: ")
            
            data1 = data[min_temp <= data[:,0],:]
            data = data1[data1[:,0] <= max_temp,:]
            print("\nThe filtered data is shown below:")
            print(data, "\n")
            
        if filter_data == 4:
            pass
        
        
    if choice == 3:
        try: 
            data
        
        #Nok bedre med en menu igen? men så bliver den længere
        #Fejlbehandling af hvad de skriver
            statistic = "Data"
            while statistic not in ["Mean Temperature","Mean Growth rate", "Std Temperature", "Std Growth rate", "Rows", "Mean Cold Growth rate","Mean Hot Growth rate", "Return to menu"]:
                statistic = input("""\nWhich of the following statistics would you like to display: 
                      \n - Mean Temperature
                      \n - Mean Growth rate
                      \n - Std Temperature
                      \n - Std Growth rate
                      \n - Rows
                      \n - Mean Cold Growth rate
                      \n - Mean Hot Growth rate
                      \n - Return to menu
                      """)
            if statistic == "Return to menu":
                break
            else:
                displayed_stats = dataStatistics(data, statistic)
                print(f"{statistic} = {displayed_stats}")
                
        except NameError:
            print("\n\n!!! Please load data before displaying statistics !!! \n\n")
            pass
        
    if choice == 4:
        try: 
            data
            
            dataPlot(data)
            
            print("\n The plots are generated based on the choosen data. \n")
        
        except NameError:
            print("\n\n!!! Please load data before plotting data !!! \n\n")
            pass
            
    if choice == 5:
        print("\nThe user has choosen to quit the program. Bye!")
        break




